{
  "contractName": "Factory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "PairDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"PairDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://49a39e71d6bde571d04722c90fd42591af806d29d8cbd4cd96f35e443702d899\",\"dweb:/ipfs/QmefLxMt6w2it9daQQFdBTtPeCWDhSqhNWuxQy8e7WrNVr\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0x4a2377c9c2bded419cd5532a6bdd92cfcd629814e1fdfe1f447cc7d42b801625\",\"urls\":[\"bzz-raw://348c3f93f6c4e9871a46fe7339cbb0a394137287ae76854093bfb4e53f3d8b69\",\"dweb:/ipfs/QmeKEHBcGDkUXhvsEYcMGBRnXpGgSDHpm9XdP1S6iAqy8i\"]},\"project:/contracts/Pair.sol\":{\"keccak256\":\"0x4686e55558d1888c837fb2e96593ed81e613c5b1f8886b3c7ef7c9eb5602b593\",\"urls\":[\"bzz-raw://ad0bb7a2957d5878a6890d93b8211021a94de7170a0bc767d394b0d906ce9873\",\"dweb:/ipfs/QmQHN8QhecKx6NHV4ehY4ejTz5VrNf5B1GW9uHF89kiuL7\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8438d27388763f274d0628245370acacbc345cce20bad5ff450dcfe001c63f9a\",\"urls\":[\"bzz-raw://3376ecf6d571a0bd84837b898b20ede0488f25a435cdcf3bf0cc7e5570a605ee\",\"dweb:/ipfs/QmeX7RKkpUDmWAYhdhkcyVcvCFC5G517iN3zDwXwUkZV4r\"]},\"project:/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf6019897e2f7d2abe47bed3bcc78aa1dfe6a7b1bfc24308240c677bd5fce6538\",\"urls\":[\"bzz-raw://e60d28a99d0d2ce95655e8307c9cd82e92a331db7a805c090795deeb5790ccce\",\"dweb:/ipfs/QmcPeNUwAtLRTL1STVH172RF5XpiuQBoYgjh7oHGDF9umT\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x54c3ec14e5bf8dd9e11b6a82a1e05e604bac6898e5338c846e1d20ad5522ae7f\",\"urls\":[\"bzz-raw://9e5200e3e4f7e5c994894243d5a77330acca48a8bfbdd3a3f7fba580af215a7e\",\"dweb:/ipfs/QmcuPUYyxMF7HsfWF4gaFiT4WcEmmMeZ9XS4LkDDMrwxj9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613a5d806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063c9c65396146200003f578063e6a439051462000075575b600080fd5b6200005d6004803603810190620000579190620003f7565b620000ab565b6040516200006c91906200044f565b60405180910390f35b6200009360048036038101906200008d9190620003f7565b6200033d565b604051620000a291906200044f565b60405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200011f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011690620004cd565b60405180910390fd5b82826040516200012f906200037f565b6200013c929190620004ef565b604051809103906000f08015801562000159573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc9a56d223b13a4cca4293cbedee4e06153ffbd03159c0282b9a2ca3ff6d17880836040516200032f91906200044f565b60405180910390a392915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61350b806200051d83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003bf8262000392565b9050919050565b620003d181620003b2565b8114620003dd57600080fd5b50565b600081359050620003f181620003c6565b92915050565b600080604083850312156200041157620004106200038d565b5b60006200042185828601620003e0565b92505060206200043485828601620003e0565b9150509250929050565b6200044981620003b2565b82525050565b60006020820190506200046660008301846200043e565b92915050565b600082825260208201905092915050565b7f546f6b656e732063616e6e6f74206265207468652073616d652e000000000000600082015250565b6000620004b5601a836200046c565b9150620004c2826200047d565b602082019050919050565b60006020820190508181036000830152620004e881620004a6565b9050919050565b60006040820190506200050660008301856200043e565b6200051560208301846200043e565b939250505056fe60e06040523480156200001157600080fd5b506040516200350b3803806200350b83398181016040528101906200003791906200037c565b6040518060400160405280600681526020017f6c5768616c6500000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f6c57484c0000000000000000000000000000000000000000000000000000000081525060128260009080519060200190620000bd92919062000262565b508160019080519060200190620000d692919062000262565b508060ff1660808160ff16815250504660a08181525050620000fd620001d260201b60201c565b60c0818152505050505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000590565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620002069190620004d3565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200024795949392919062000533565b60405160208183030381529060405280519060200120905090565b8280546200027090620003f2565b90600052602060002090601f016020900481019282620002945760008555620002e0565b82601f10620002af57805160ff1916838001178555620002e0565b82800160010185558215620002e0579182015b82811115620002df578251825591602001919060010190620002c2565b5b509050620002ef9190620002f3565b5090565b5b808211156200030e576000816000905550600101620002f4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003448262000317565b9050919050565b620003568162000337565b81146200036257600080fd5b50565b60008151905062000376816200034b565b92915050565b6000806040838503121562000396576200039562000312565b5b6000620003a68582860162000365565b9250506020620003b98582860162000365565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040b57607f821691505b60208210811415620004225762000421620003c3565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546200045781620003f2565b62000463818662000428565b945060018216600081146200048157600181146200049357620004ca565b60ff19831686528186019350620004ca565b6200049e8562000433565b60005b83811015620004c257815481890152600182019150602081019050620004a1565b838801955050505b50505092915050565b6000620004e1828462000448565b915081905092915050565b6000819050919050565b6200050181620004ec565b82525050565b6000819050919050565b6200051c8162000507565b82525050565b6200052d8162000337565b82525050565b600060a0820190506200054a6000830188620004f6565b620005596020830187620004f6565b620005686040830186620004f6565b62000577606083018562000511565b62000586608083018462000522565b9695505050505050565b60805160a05160c051612f4b620005c06000396000610908015260006108d4015260006108ae0152612f4b6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063c45a01551161007c578063c45a0155146103ce578063cc5864ee146103ec578063d21220a71461040a578063d505accf14610428578063dd62ed3e14610444578063f9063ba1146104745761014d565b806370a08231146102d15780637ecebe001461030157806385e63fc61461033157806389afcb441461034f57806395d89b4114610380578063a9059cbb1461039e5761014d565b806330adf81f1161011557806330adf81f1461020c578063313ce5671461022a5780633644e515146102485780633d370b4e146102665780636a627842146102855780636d9a640a146102b55761014d565b806306fdde0314610152578063095ea7b3146101705780630dfe1681146101a057806318160ddd146101be57806323b872dd146101dc575b600080fd5b61015a610492565b604051610167919061223d565b60405180910390f35b61018a600480360381019061018591906122f8565b610520565b6040516101979190612353565b60405180910390f35b6101a8610612565b6040516101b5919061237d565b60405180910390f35b6101c6610638565b6040516101d391906123a7565b60405180910390f35b6101f660048036038101906101f191906123c2565b61063e565b6040516102039190612353565b60405180910390f35b610214610888565b604051610221919061242e565b60405180910390f35b6102326108ac565b60405161023f9190612465565b60405180910390f35b6102506108d0565b60405161025d919061242e565b60405180910390f35b61026e61092d565b60405161027c9291906124a9565b60405180910390f35b61029f600480360381019061029a91906124d2565b610972565b6040516102ac91906123a7565b60405180910390f35b6102cf60048036038101906102ca91906124ff565b610c60565b005b6102eb60048036038101906102e691906124d2565b6111ae565b6040516102f891906123a7565b60405180910390f35b61031b600480360381019061031691906124d2565b6111c6565b60405161032891906123a7565b60405180910390f35b6103396111de565b6040516103469190612571565b60405180910390f35b610369600480360381019061036491906124d2565b6111f4565b60405161037792919061258c565b60405180910390f35b610388611693565b604051610395919061223d565b60405180910390f35b6103b860048036038101906103b391906122f8565b611721565b6040516103c59190612353565b60405180910390f35b6103d6611835565b6040516103e3919061237d565b60405180910390f35b6103f461185b565b60405161040191906123a7565b60405180910390f35b610412611861565b60405161041f919061237d565b60405180910390f35b610442600480360381019061043d919061260d565b611887565b005b61045e600480360381019061045991906126af565b611b86565b60405161046b91906123a7565b60405180910390f35b61047c611bab565b60405161048991906123a7565b60405180910390f35b6000805461049f9061271e565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb9061271e565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161060091906123a7565b60405180910390a36001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107745782816106f3919061277f565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c3919061277f565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161087491906123a7565b60405180910390a360019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000461461090657610901611bb1565b610928565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600080600960009054906101000a90046dffffffffffffffffffffffffffff1691506009600e9054906101000a90046dffffffffffffffffffffffffffff1690509091565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109d0919061237d565b602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906127c8565b90506000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a70919061237d565b602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab191906127c8565b90506000610af4600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1684611c3d90919063ffffffff16565b90506000610b376009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1684611c3d90919063ffffffff16565b905060006002541415610b6657610b5f610b5a8284611c9690919063ffffffff16565b611d03565b9450610c09565b610c06600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610bab60025485611c9690919063ffffffff16565b610bb59190612824565b6009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610bf760025485611c9690919063ffffffff16565b610c019190612824565b611d7d565b94505b610c138686611d96565b610c578484600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b50505050919050565b6000806000851115610d0e57600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401610cc9929190612855565b6020604051808303816000875af1158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c91906128aa565b505b6000841115610db957600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610d74929190612855565b6020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db791906128aa565b505b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e14919061237d565b602060405180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5591906127c8565b9150600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610eb2919061237d565b602060405180830381865afa158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef391906127c8565b9050600085600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f2f919061277f565b8311610f3c576000610f80565b85600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f74919061277f565b83610f7f919061277f565b5b90506000856009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610fbc919061277f565b8311610fc957600061100d565b856009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16611001919061277f565b8361100c919061277f565b5b9050600061104b611028600385611c9690919063ffffffff16565b61103d6103e888611c9690919063ffffffff16565b611c3d90919063ffffffff16565b90506000611089611066600385611c9690919063ffffffff16565b61107b6103e888611c9690919063ffffffff16565b611c3d90919063ffffffff16565b905061110b620f42406110fd6009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16611c9690919063ffffffff16565b611c9690919063ffffffff16565b61111e8284611c9690919063ffffffff16565b101561115f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115690612923565b60405180910390fd5b6111a38686600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b505050505050505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600d60009054906101000a900463ffffffff1681565b6000806000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611254919061237d565b602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906127c8565b90506000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112f4919061237d565b602060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906127c8565b90506000600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506002546113918483611c9690919063ffffffff16565b61139b9190612824565b94506002546113b38383611c9690919063ffffffff16565b6113bd9190612824565b93506113c9308261207a565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401611426929190612855565b6020604051808303816000875af1158015611445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146991906128aa565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87866040518363ffffffff1660e01b81526004016114c7929190612855565b6020604051808303816000875af11580156114e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150a91906128aa565b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611566919061237d565b602060405180830381865afa158015611583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a791906127c8565b9250600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611604919061237d565b602060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164591906127c8565b915061168b8383600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b505050915091565b600180546116a09061271e565b80601f01602080910402602001604051908101604052809291908181526020018280546116cc9061271e565b80156117195780601f106116ee57610100808354040283529160200191611719565b820191906000526020600020905b8154815290600101906020018083116116fc57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611772919061277f565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182391906123a7565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b428410156118ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c19061298f565b60405180910390fd5b60006118d46108d0565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161195c969594939291906129af565b60405160208183030381529060405280519060200120604051602001611983929190612a88565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516119c09493929190612abf565b6020604051602081039080840390855afa1580156119e2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611a5657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90612b50565b60405180910390fd5b86600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051611b7591906123a7565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600b5481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611be39190612c0f565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611c22959493929190612c26565b60405160208183030381529060405280519060200120905090565b6000828284611c4c919061277f565b9150811115611c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8790612cc5565b60405180910390fd5b92915050565b600080821480611cbe575082828385611caf9190612ce5565b925082611cbc9190612824565b145b611cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf490612d8b565b60405180910390fd5b92915050565b60006003821115611d6a5781905060006001600284611d229190612824565b611d2c9190612dab565b90505b81811015611d64578091506002818285611d499190612824565b611d539190612dab565b611d5d9190612824565b9050611d2f565b50611d78565b60008214611d7757600190505b5b919050565b6000818310611d8c5781611d8e565b825b905092915050565b8060026000828254611da89190612dab565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e5a91906123a7565b60405180910390a35050565b600064010000000042611e799190612e01565b90506000600d60009054906101000a900463ffffffff1682611e9b9190612e32565b905060008163ffffffff16118015611ec457506000846dffffffffffffffffffffffffffff1614155b8015611ee157506000836dffffffffffffffffffffffffffff1614155b15611fe7578063ffffffff16611f2685611efa8661214a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661217e90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611f4e9190612ce5565b600b6000828254611f5f9190612dab565b925050819055508063ffffffff16611fa684611f7a8761214a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661217e90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611fce9190612ce5565b600c6000828254611fdf9190612dab565b925050819055505b85600960006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846009600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555081600d60006101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120c9919061277f565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161213e91906123a7565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166121779190612e8e565b9050919050565b6000816dffffffffffffffffffffffffffff168361219c9190612ee4565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121de5780820151818401526020810190506121c3565b838111156121ed576000848401525b50505050565b6000601f19601f8301169050919050565b600061220f826121a4565b61221981856121af565b93506122298185602086016121c0565b612232816121f3565b840191505092915050565b600060208201905081810360008301526122578184612204565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228f82612264565b9050919050565b61229f81612284565b81146122aa57600080fd5b50565b6000813590506122bc81612296565b92915050565b6000819050919050565b6122d5816122c2565b81146122e057600080fd5b50565b6000813590506122f2816122cc565b92915050565b6000806040838503121561230f5761230e61225f565b5b600061231d858286016122ad565b925050602061232e858286016122e3565b9150509250929050565b60008115159050919050565b61234d81612338565b82525050565b60006020820190506123686000830184612344565b92915050565b61237781612284565b82525050565b6000602082019050612392600083018461236e565b92915050565b6123a1816122c2565b82525050565b60006020820190506123bc6000830184612398565b92915050565b6000806000606084860312156123db576123da61225f565b5b60006123e9868287016122ad565b93505060206123fa868287016122ad565b925050604061240b868287016122e3565b9150509250925092565b6000819050919050565b61242881612415565b82525050565b6000602082019050612443600083018461241f565b92915050565b600060ff82169050919050565b61245f81612449565b82525050565b600060208201905061247a6000830184612456565b92915050565b60006dffffffffffffffffffffffffffff82169050919050565b6124a381612480565b82525050565b60006040820190506124be600083018561249a565b6124cb602083018461249a565b9392505050565b6000602082840312156124e8576124e761225f565b5b60006124f6848285016122ad565b91505092915050565b6000806000606084860312156125185761251761225f565b5b6000612526868287016122e3565b9350506020612537868287016122e3565b9250506040612548868287016122ad565b9150509250925092565b600063ffffffff82169050919050565b61256b81612552565b82525050565b60006020820190506125866000830184612562565b92915050565b60006040820190506125a16000830185612398565b6125ae6020830184612398565b9392505050565b6125be81612449565b81146125c957600080fd5b50565b6000813590506125db816125b5565b92915050565b6125ea81612415565b81146125f557600080fd5b50565b600081359050612607816125e1565b92915050565b600080600080600080600060e0888a03121561262c5761262b61225f565b5b600061263a8a828b016122ad565b975050602061264b8a828b016122ad565b965050604061265c8a828b016122e3565b955050606061266d8a828b016122e3565b945050608061267e8a828b016125cc565b93505060a061268f8a828b016125f8565b92505060c06126a08a828b016125f8565b91505092959891949750929550565b600080604083850312156126c6576126c561225f565b5b60006126d4858286016122ad565b92505060206126e5858286016122ad565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061273657607f821691505b6020821081141561274a576127496126ef565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061278a826122c2565b9150612795836122c2565b9250828210156127a8576127a7612750565b5b828203905092915050565b6000815190506127c2816122cc565b92915050565b6000602082840312156127de576127dd61225f565b5b60006127ec848285016127b3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061282f826122c2565b915061283a836122c2565b92508261284a576128496127f5565b5b828204905092915050565b600060408201905061286a600083018561236e565b6128776020830184612398565b9392505050565b61288781612338565b811461289257600080fd5b50565b6000815190506128a48161287e565b92915050565b6000602082840312156128c0576128bf61225f565b5b60006128ce84828501612895565b91505092915050565b7f5768616c65737761703a204b0000000000000000000000000000000000000000600082015250565b600061290d600c836121af565b9150612918826128d7565b602082019050919050565b6000602082019050818103600083015261293c81612900565b9050919050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006129796017836121af565b915061298482612943565b602082019050919050565b600060208201905081810360008301526129a88161296c565b9050919050565b600060c0820190506129c4600083018961241f565b6129d1602083018861236e565b6129de604083018761236e565b6129eb6060830186612398565b6129f86080830185612398565b612a0560a0830184612398565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a51600283612a10565b9150612a5c82612a1b565b600282019050919050565b6000819050919050565b612a82612a7d82612415565b612a67565b82525050565b6000612a9382612a44565b9150612a9f8285612a71565b602082019150612aaf8284612a71565b6020820191508190509392505050565b6000608082019050612ad4600083018761241f565b612ae16020830186612456565b612aee604083018561241f565b612afb606083018461241f565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000612b3a600e836121af565b9150612b4582612b04565b602082019050919050565b60006020820190508181036000830152612b6981612b2d565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612b9d8161271e565b612ba78186612b70565b94506001821660008114612bc25760018114612bd357612c06565b60ff19831686528186019350612c06565b612bdc85612b7b565b60005b83811015612bfe57815481890152600182019150602081019050612bdf565b838801955050505b50505092915050565b6000612c1b8284612b90565b915081905092915050565b600060a082019050612c3b600083018861241f565b612c48602083018761241f565b612c55604083018661241f565b612c626060830185612398565b612c6f608083018461236e565b9695505050505050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000612caf6015836121af565b9150612cba82612c79565b602082019050919050565b60006020820190508181036000830152612cde81612ca2565b9050919050565b6000612cf0826122c2565b9150612cfb836122c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612d3457612d33612750565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000612d756014836121af565b9150612d8082612d3f565b602082019050919050565b60006020820190508181036000830152612da481612d68565b9050919050565b6000612db6826122c2565b9150612dc1836122c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612df657612df5612750565b5b828201905092915050565b6000612e0c826122c2565b9150612e17836122c2565b925082612e2757612e266127f5565b5b828206905092915050565b6000612e3d82612552565b9150612e4883612552565b925082821015612e5b57612e5a612750565b5b828203905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e9982612e66565b9150612ea483612e66565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ed957612ed8612750565b5b828202905092915050565b6000612eef82612e66565b9150612efa83612e66565b925082612f0a57612f096127f5565b5b82820490509291505056fea26469706673582212204fe1ccbb3aa4df6e2f04f529ad259f7c03b1c6f44e162ec30b246e961c9a24ad64736f6c634300080b0033a2646970667358221220af2cca4bedaca2f092c9abaf4526b1d8142341c032b4ac2be7a607739350483d64736f6c634300080b0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063c9c65396146200003f578063e6a439051462000075575b600080fd5b6200005d6004803603810190620000579190620003f7565b620000ab565b6040516200006c91906200044f565b60405180910390f35b6200009360048036038101906200008d9190620003f7565b6200033d565b604051620000a291906200044f565b60405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200011f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011690620004cd565b60405180910390fd5b82826040516200012f906200037f565b6200013c929190620004ef565b604051809103906000f08015801562000159573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc9a56d223b13a4cca4293cbedee4e06153ffbd03159c0282b9a2ca3ff6d17880836040516200032f91906200044f565b60405180910390a392915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61350b806200051d83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003bf8262000392565b9050919050565b620003d181620003b2565b8114620003dd57600080fd5b50565b600081359050620003f181620003c6565b92915050565b600080604083850312156200041157620004106200038d565b5b60006200042185828601620003e0565b92505060206200043485828601620003e0565b9150509250929050565b6200044981620003b2565b82525050565b60006020820190506200046660008301846200043e565b92915050565b600082825260208201905092915050565b7f546f6b656e732063616e6e6f74206265207468652073616d652e000000000000600082015250565b6000620004b5601a836200046c565b9150620004c2826200047d565b602082019050919050565b60006020820190508181036000830152620004e881620004a6565b9050919050565b60006040820190506200050660008301856200043e565b6200051560208301846200043e565b939250505056fe60e06040523480156200001157600080fd5b506040516200350b3803806200350b83398181016040528101906200003791906200037c565b6040518060400160405280600681526020017f6c5768616c6500000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f6c57484c0000000000000000000000000000000000000000000000000000000081525060128260009080519060200190620000bd92919062000262565b508160019080519060200190620000d692919062000262565b508060ff1660808160ff16815250504660a08181525050620000fd620001d260201b60201c565b60c0818152505050505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000590565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620002069190620004d3565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200024795949392919062000533565b60405160208183030381529060405280519060200120905090565b8280546200027090620003f2565b90600052602060002090601f016020900481019282620002945760008555620002e0565b82601f10620002af57805160ff1916838001178555620002e0565b82800160010185558215620002e0579182015b82811115620002df578251825591602001919060010190620002c2565b5b509050620002ef9190620002f3565b5090565b5b808211156200030e576000816000905550600101620002f4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003448262000317565b9050919050565b620003568162000337565b81146200036257600080fd5b50565b60008151905062000376816200034b565b92915050565b6000806040838503121562000396576200039562000312565b5b6000620003a68582860162000365565b9250506020620003b98582860162000365565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040b57607f821691505b60208210811415620004225762000421620003c3565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546200045781620003f2565b62000463818662000428565b945060018216600081146200048157600181146200049357620004ca565b60ff19831686528186019350620004ca565b6200049e8562000433565b60005b83811015620004c257815481890152600182019150602081019050620004a1565b838801955050505b50505092915050565b6000620004e1828462000448565b915081905092915050565b6000819050919050565b6200050181620004ec565b82525050565b6000819050919050565b6200051c8162000507565b82525050565b6200052d8162000337565b82525050565b600060a0820190506200054a6000830188620004f6565b620005596020830187620004f6565b620005686040830186620004f6565b62000577606083018562000511565b62000586608083018462000522565b9695505050505050565b60805160a05160c051612f4b620005c06000396000610908015260006108d4015260006108ae0152612f4b6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063c45a01551161007c578063c45a0155146103ce578063cc5864ee146103ec578063d21220a71461040a578063d505accf14610428578063dd62ed3e14610444578063f9063ba1146104745761014d565b806370a08231146102d15780637ecebe001461030157806385e63fc61461033157806389afcb441461034f57806395d89b4114610380578063a9059cbb1461039e5761014d565b806330adf81f1161011557806330adf81f1461020c578063313ce5671461022a5780633644e515146102485780633d370b4e146102665780636a627842146102855780636d9a640a146102b55761014d565b806306fdde0314610152578063095ea7b3146101705780630dfe1681146101a057806318160ddd146101be57806323b872dd146101dc575b600080fd5b61015a610492565b604051610167919061223d565b60405180910390f35b61018a600480360381019061018591906122f8565b610520565b6040516101979190612353565b60405180910390f35b6101a8610612565b6040516101b5919061237d565b60405180910390f35b6101c6610638565b6040516101d391906123a7565b60405180910390f35b6101f660048036038101906101f191906123c2565b61063e565b6040516102039190612353565b60405180910390f35b610214610888565b604051610221919061242e565b60405180910390f35b6102326108ac565b60405161023f9190612465565b60405180910390f35b6102506108d0565b60405161025d919061242e565b60405180910390f35b61026e61092d565b60405161027c9291906124a9565b60405180910390f35b61029f600480360381019061029a91906124d2565b610972565b6040516102ac91906123a7565b60405180910390f35b6102cf60048036038101906102ca91906124ff565b610c60565b005b6102eb60048036038101906102e691906124d2565b6111ae565b6040516102f891906123a7565b60405180910390f35b61031b600480360381019061031691906124d2565b6111c6565b60405161032891906123a7565b60405180910390f35b6103396111de565b6040516103469190612571565b60405180910390f35b610369600480360381019061036491906124d2565b6111f4565b60405161037792919061258c565b60405180910390f35b610388611693565b604051610395919061223d565b60405180910390f35b6103b860048036038101906103b391906122f8565b611721565b6040516103c59190612353565b60405180910390f35b6103d6611835565b6040516103e3919061237d565b60405180910390f35b6103f461185b565b60405161040191906123a7565b60405180910390f35b610412611861565b60405161041f919061237d565b60405180910390f35b610442600480360381019061043d919061260d565b611887565b005b61045e600480360381019061045991906126af565b611b86565b60405161046b91906123a7565b60405180910390f35b61047c611bab565b60405161048991906123a7565b60405180910390f35b6000805461049f9061271e565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb9061271e565b80156105185780601f106104ed57610100808354040283529160200191610518565b820191906000526020600020905b8154815290600101906020018083116104fb57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161060091906123a7565b60405180910390a36001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107745782816106f3919061277f565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107c3919061277f565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161087491906123a7565b60405180910390a360019150509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f0000000000000000000000000000000000000000000000000000000000000000461461090657610901611bb1565b610928565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b600080600960009054906101000a90046dffffffffffffffffffffffffffff1691506009600e9054906101000a90046dffffffffffffffffffffffffffff1690509091565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109d0919061237d565b602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906127c8565b90506000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a70919061237d565b602060405180830381865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab191906127c8565b90506000610af4600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1684611c3d90919063ffffffff16565b90506000610b376009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1684611c3d90919063ffffffff16565b905060006002541415610b6657610b5f610b5a8284611c9690919063ffffffff16565b611d03565b9450610c09565b610c06600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610bab60025485611c9690919063ffffffff16565b610bb59190612824565b6009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610bf760025485611c9690919063ffffffff16565b610c019190612824565b611d7d565b94505b610c138686611d96565b610c578484600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b50505050919050565b6000806000851115610d0e57600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84876040518363ffffffff1660e01b8152600401610cc9929190612855565b6020604051808303816000875af1158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c91906128aa565b505b6000841115610db957600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610d74929190612855565b6020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db791906128aa565b505b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e14919061237d565b602060405180830381865afa158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5591906127c8565b9150600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610eb2919061237d565b602060405180830381865afa158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef391906127c8565b9050600085600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f2f919061277f565b8311610f3c576000610f80565b85600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610f74919061277f565b83610f7f919061277f565b5b90506000856009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16610fbc919061277f565b8311610fc957600061100d565b856009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16611001919061277f565b8361100c919061277f565b5b9050600061104b611028600385611c9690919063ffffffff16565b61103d6103e888611c9690919063ffffffff16565b611c3d90919063ffffffff16565b90506000611089611066600385611c9690919063ffffffff16565b61107b6103e888611c9690919063ffffffff16565b611c3d90919063ffffffff16565b905061110b620f42406110fd6009600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600960009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16611c9690919063ffffffff16565b611c9690919063ffffffff16565b61111e8284611c9690919063ffffffff16565b101561115f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115690612923565b60405180910390fd5b6111a38686600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b505050505050505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600d60009054906101000a900463ffffffff1681565b6000806000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611254919061237d565b602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129591906127c8565b90506000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112f4919061237d565b602060405180830381865afa158015611311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133591906127c8565b90506000600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506002546113918483611c9690919063ffffffff16565b61139b9190612824565b94506002546113b38383611c9690919063ffffffff16565b6113bd9190612824565b93506113c9308261207a565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87876040518363ffffffff1660e01b8152600401611426929190612855565b6020604051808303816000875af1158015611445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146991906128aa565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87866040518363ffffffff1660e01b81526004016114c7929190612855565b6020604051808303816000875af11580156114e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150a91906128aa565b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611566919061237d565b602060405180830381865afa158015611583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a791906127c8565b9250600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611604919061237d565b602060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164591906127c8565b915061168b8383600960009054906101000a90046dffffffffffffffffffffffffffff166009600e9054906101000a90046dffffffffffffffffffffffffffff16611e66565b505050915091565b600180546116a09061271e565b80601f01602080910402602001604051908101604052809291908181526020018280546116cc9061271e565b80156117195780601f106116ee57610100808354040283529160200191611719565b820191906000526020600020905b8154815290600101906020018083116116fc57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611772919061277f565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161182391906123a7565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b428410156118ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c19061298f565b60405180910390fd5b60006118d46108d0565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a60405160200161195c969594939291906129af565b60405160208183030381529060405280519060200120604051602001611983929190612a88565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516119c09493929190612abf565b6020604051602081039080840390855afa1580156119e2573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611a5657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a8c90612b50565b60405180910390fd5b86600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051611b7591906123a7565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600b5481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051611be39190612c0f565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001611c22959493929190612c26565b60405160208183030381529060405280519060200120905090565b6000828284611c4c919061277f565b9150811115611c90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8790612cc5565b60405180910390fd5b92915050565b600080821480611cbe575082828385611caf9190612ce5565b925082611cbc9190612824565b145b611cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf490612d8b565b60405180910390fd5b92915050565b60006003821115611d6a5781905060006001600284611d229190612824565b611d2c9190612dab565b90505b81811015611d64578091506002818285611d499190612824565b611d539190612dab565b611d5d9190612824565b9050611d2f565b50611d78565b60008214611d7757600190505b5b919050565b6000818310611d8c5781611d8e565b825b905092915050565b8060026000828254611da89190612dab565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e5a91906123a7565b60405180910390a35050565b600064010000000042611e799190612e01565b90506000600d60009054906101000a900463ffffffff1682611e9b9190612e32565b905060008163ffffffff16118015611ec457506000846dffffffffffffffffffffffffffff1614155b8015611ee157506000836dffffffffffffffffffffffffffff1614155b15611fe7578063ffffffff16611f2685611efa8661214a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661217e90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611f4e9190612ce5565b600b6000828254611f5f9190612dab565b925050819055508063ffffffff16611fa684611f7a8761214a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661217e90919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611fce9190612ce5565b600c6000828254611fdf9190612dab565b925050819055505b85600960006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846009600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555081600d60006101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546120c9919061277f565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161213e91906123a7565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166121779190612e8e565b9050919050565b6000816dffffffffffffffffffffffffffff168361219c9190612ee4565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156121de5780820151818401526020810190506121c3565b838111156121ed576000848401525b50505050565b6000601f19601f8301169050919050565b600061220f826121a4565b61221981856121af565b93506122298185602086016121c0565b612232816121f3565b840191505092915050565b600060208201905081810360008301526122578184612204565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228f82612264565b9050919050565b61229f81612284565b81146122aa57600080fd5b50565b6000813590506122bc81612296565b92915050565b6000819050919050565b6122d5816122c2565b81146122e057600080fd5b50565b6000813590506122f2816122cc565b92915050565b6000806040838503121561230f5761230e61225f565b5b600061231d858286016122ad565b925050602061232e858286016122e3565b9150509250929050565b60008115159050919050565b61234d81612338565b82525050565b60006020820190506123686000830184612344565b92915050565b61237781612284565b82525050565b6000602082019050612392600083018461236e565b92915050565b6123a1816122c2565b82525050565b60006020820190506123bc6000830184612398565b92915050565b6000806000606084860312156123db576123da61225f565b5b60006123e9868287016122ad565b93505060206123fa868287016122ad565b925050604061240b868287016122e3565b9150509250925092565b6000819050919050565b61242881612415565b82525050565b6000602082019050612443600083018461241f565b92915050565b600060ff82169050919050565b61245f81612449565b82525050565b600060208201905061247a6000830184612456565b92915050565b60006dffffffffffffffffffffffffffff82169050919050565b6124a381612480565b82525050565b60006040820190506124be600083018561249a565b6124cb602083018461249a565b9392505050565b6000602082840312156124e8576124e761225f565b5b60006124f6848285016122ad565b91505092915050565b6000806000606084860312156125185761251761225f565b5b6000612526868287016122e3565b9350506020612537868287016122e3565b9250506040612548868287016122ad565b9150509250925092565b600063ffffffff82169050919050565b61256b81612552565b82525050565b60006020820190506125866000830184612562565b92915050565b60006040820190506125a16000830185612398565b6125ae6020830184612398565b9392505050565b6125be81612449565b81146125c957600080fd5b50565b6000813590506125db816125b5565b92915050565b6125ea81612415565b81146125f557600080fd5b50565b600081359050612607816125e1565b92915050565b600080600080600080600060e0888a03121561262c5761262b61225f565b5b600061263a8a828b016122ad565b975050602061264b8a828b016122ad565b965050604061265c8a828b016122e3565b955050606061266d8a828b016122e3565b945050608061267e8a828b016125cc565b93505060a061268f8a828b016125f8565b92505060c06126a08a828b016125f8565b91505092959891949750929550565b600080604083850312156126c6576126c561225f565b5b60006126d4858286016122ad565b92505060206126e5858286016122ad565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061273657607f821691505b6020821081141561274a576127496126ef565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061278a826122c2565b9150612795836122c2565b9250828210156127a8576127a7612750565b5b828203905092915050565b6000815190506127c2816122cc565b92915050565b6000602082840312156127de576127dd61225f565b5b60006127ec848285016127b3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061282f826122c2565b915061283a836122c2565b92508261284a576128496127f5565b5b828204905092915050565b600060408201905061286a600083018561236e565b6128776020830184612398565b9392505050565b61288781612338565b811461289257600080fd5b50565b6000815190506128a48161287e565b92915050565b6000602082840312156128c0576128bf61225f565b5b60006128ce84828501612895565b91505092915050565b7f5768616c65737761703a204b0000000000000000000000000000000000000000600082015250565b600061290d600c836121af565b9150612918826128d7565b602082019050919050565b6000602082019050818103600083015261293c81612900565b9050919050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006129796017836121af565b915061298482612943565b602082019050919050565b600060208201905081810360008301526129a88161296c565b9050919050565b600060c0820190506129c4600083018961241f565b6129d1602083018861236e565b6129de604083018761236e565b6129eb6060830186612398565b6129f86080830185612398565b612a0560a0830184612398565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a51600283612a10565b9150612a5c82612a1b565b600282019050919050565b6000819050919050565b612a82612a7d82612415565b612a67565b82525050565b6000612a9382612a44565b9150612a9f8285612a71565b602082019150612aaf8284612a71565b6020820191508190509392505050565b6000608082019050612ad4600083018761241f565b612ae16020830186612456565b612aee604083018561241f565b612afb606083018461241f565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000612b3a600e836121af565b9150612b4582612b04565b602082019050919050565b60006020820190508181036000830152612b6981612b2d565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154612b9d8161271e565b612ba78186612b70565b94506001821660008114612bc25760018114612bd357612c06565b60ff19831686528186019350612c06565b612bdc85612b7b565b60005b83811015612bfe57815481890152600182019150602081019050612bdf565b838801955050505b50505092915050565b6000612c1b8284612b90565b915081905092915050565b600060a082019050612c3b600083018861241f565b612c48602083018761241f565b612c55604083018661241f565b612c626060830185612398565b612c6f608083018461236e565b9695505050505050565b7f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000600082015250565b6000612caf6015836121af565b9150612cba82612c79565b602082019050919050565b60006020820190508181036000830152612cde81612ca2565b9050919050565b6000612cf0826122c2565b9150612cfb836122c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612d3457612d33612750565b5b828202905092915050565b7f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000600082015250565b6000612d756014836121af565b9150612d8082612d3f565b602082019050919050565b60006020820190508181036000830152612da481612d68565b9050919050565b6000612db6826122c2565b9150612dc1836122c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612df657612df5612750565b5b828201905092915050565b6000612e0c826122c2565b9150612e17836122c2565b925082612e2757612e266127f5565b5b828206905092915050565b6000612e3d82612552565b9150612e4883612552565b925082821015612e5b57612e5a612750565b5b828203905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e9982612e66565b9150612ea483612e66565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ed957612ed8612750565b5b828202905092915050565b6000612eef82612e66565b9150612efa83612e66565b925082612f0a57612f096127f5565b5b82820490509291505056fea26469706673582212204fe1ccbb3aa4df6e2f04f529ad259f7c03b1c6f44e162ec30b246e961c9a24ad64736f6c634300080b0033a2646970667358221220af2cca4bedaca2f092c9abaf4526b1d8142341c032b4ac2be7a607739350483d64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3162:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:7",
                "type": ""
              }
            ],
            "src": "466:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:7",
                "type": ""
              }
            ],
            "src": "568:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:7",
                "type": ""
              }
            ],
            "src": "696:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "924:391:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "972:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "945:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "954:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "941:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "937:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "934:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1063:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1078:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1092:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1082:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1107:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1142:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1153:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1138:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1138:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1162:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1117:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1107:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1190:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1205:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1219:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1209:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1235:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1270:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1281:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1266:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1266:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1290:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1245:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1235:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "886:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "897:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "909:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "917:6:7",
                "type": ""
              }
            ],
            "src": "841:474:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1403:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1426:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1408:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1408:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1374:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1381:3:7",
                "type": ""
              }
            ],
            "src": "1321:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1553:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1633:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1646:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1657:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1642:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1642:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1589:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1538:4:7",
                "type": ""
              }
            ],
            "src": "1445:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1786:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1791:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1779:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1807:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1826:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1831:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1822:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1822:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1807:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1741:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1746:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1757:11:7",
                "type": ""
              }
            ],
            "src": "1673:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1954:70:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1976:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1984:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1972:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1972:14:7"
                      },
                      {
                        "hexValue": "546f6b656e732063616e6e6f74206265207468652073616d652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1988:28:7",
                        "type": "",
                        "value": "Tokens cannot be the same."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1965:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1965:52:7"
                }
              ]
            },
            "name": "store_literal_in_memory_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1946:6:7",
                "type": ""
              }
            ],
            "src": "1848:176:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2176:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2186:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2252:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2257:2:7",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2193:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2186:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2358:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
                      "nodeType": "YulIdentifier",
                      "src": "2269:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2269:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2269:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2371:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2382:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2387:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2378:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2371:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2164:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2172:3:7",
                "type": ""
              }
            ],
            "src": "2030:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2573:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2583:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2595:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2606:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2591:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2591:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2583:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2630:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2641:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2626:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2626:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2649:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2655:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2645:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2645:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2619:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2619:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2675:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2809:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2683:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2675:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2553:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2568:4:7",
                "type": ""
              }
            ],
            "src": "2402:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2953:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2963:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2975:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2986:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2971:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2963:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3043:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3056:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3067:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3052:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2999:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2999:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2999:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3124:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3137:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3148:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3080:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3080:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3080:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2917:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2929:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2937:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2948:4:7",
                "type": ""
              }
            ],
            "src": "2827:332:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens cannot be the same.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "76:702:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "76:702:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;99:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;285:491;371:12;441:6;431:16;;:6;:16;;;;423:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;587:6;595;578:24;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;563:40;;675:4;649:7;:15;657:6;649:15;;;;;;;;;;;;;;;:23;665:6;649:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;715:4;689:7;:15;697:6;689:15;;;;;;;;;;;;;;;:23;705:6;689:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;756:6;735:34;;748:6;735:34;;;764:4;735:34;;;;;;:::i;:::-;;;;;;;;285:491;;;;:::o;99:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1321:118;;:::o;1445:222::-;1538:4;1576:2;1565:9;1561:18;1553:26;;1589:71;1657:1;1646:9;1642:17;1633:6;1589:71;:::i;:::-;1445:222;;;;:::o;1673:169::-;1757:11;1791:6;1786:3;1779:19;1831:4;1826:3;1822:14;1807:29;;1673:169;;;;:::o;1848:176::-;1988:28;1984:1;1976:6;1972:14;1965:52;1848:176;:::o;2030:366::-;2172:3;2193:67;2257:2;2252:3;2193:67;:::i;:::-;2186:74;;2269:93;2358:3;2269:93;:::i;:::-;2387:2;2382:3;2378:12;2371:19;;2030:366;;;:::o;2402:419::-;2568:4;2606:2;2595:9;2591:18;2583:26;;2655:9;2649:4;2645:20;2641:1;2630:9;2626:17;2619:47;2683:131;2809:4;2683:131;:::i;:::-;2675:139;;2402:419;;;:::o;2827:332::-;2948:4;2986:2;2975:9;2971:18;2963:26;;2999:71;3067:1;3056:9;3052:17;3043:6;2999:71;:::i;:::-;3080:72;3148:2;3137:9;3133:18;3124:6;3080:72;:::i;:::-;2827:332;;;;;:::o",
  "source": "pragma solidity >=0.4.21;\n\npragma solidity >=0.4.21;\n\nimport \"./Pair.sol\";\n\ncontract Factory {\n    mapping(address => mapping(address => address)) public getPair;\n\n    event PairDeployed(\n        address indexed token0,\n        address indexed token1,\n        address pair\n    );\n\n    function createPair(address token0, address token1)\n        external\n        returns (address pair)\n    {\n        // requirements\n        require(token0 != token1, \"Tokens cannot be the same.\");\n        // TODO: Check pair doesn't exist\n\n        // instantiate new pool\n        pair = address(new Pair(token0, token1));\n\n        // record new pair address\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair;\n\n        emit PairDeployed(token0, token1, pair);\n    }\n}\n",
  "sourcePath": "/Users/kitwiggin/senior_design/WhaleSwapMVP/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "ERC20": [
        394
      ],
      "Factory": [
        464
      ],
      "Math": [
        1680
      ],
      "Pair": [
        990
      ],
      "SafeMath": [
        1755
      ],
      "UQ112x112": [
        1799
      ]
    },
    "id": 465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:1"
      },
      {
        "id": 397,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:25:1"
      },
      {
        "absolutePath": "project:/contracts/Pair.sol",
        "file": "./Pair.sol",
        "id": 398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 465,
        "sourceUnit": 991,
        "src": "54:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          990
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 464,
        "linearizedBaseContracts": [
          464
        ],
        "name": "Factory",
        "nameLocation": "85:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 404,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "154:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 464,
            "src": "99:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 403,
              "keyType": {
                "id": 399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "107:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "99:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 402,
                "keyType": {
                  "id": 400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "118:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 401,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "137:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 412,
            "name": "PairDeployed",
            "nameLocation": "174:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "212:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "196:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "244:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "228:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "268:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "260:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:92:1"
            },
            "src": "168:111:1"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "389:387:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 422,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "431:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 423,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "441:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "431:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e732063616e6e6f74206265207468652073616d652e",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "449:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
                          "typeString": "literal_string \"Tokens cannot be the same.\""
                        },
                        "value": "Tokens cannot be the same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
                          "typeString": "literal_string \"Tokens cannot be the same.\""
                        }
                      ],
                      "id": 421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "423:55:1"
                },
                {
                  "expression": {
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 428,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "563:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 434,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "587:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 435,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "595:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "578:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Pair_$990_$",
                              "typeString": "function (address,address) returns (contract Pair)"
                            },
                            "typeName": {
                              "id": 432,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 431,
                                "name": "Pair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 990,
                                "src": "582:4:1"
                              },
                              "referencedDeclaration": 990,
                              "src": "582:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pair_$990",
                                "typeString": "contract Pair"
                              }
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pair_$990",
                            "typeString": "contract Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Pair_$990",
                            "typeString": "contract Pair"
                          }
                        ],
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "570:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "570:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "563:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "563:40:1"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "649:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "id": 441,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "657:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "649:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 444,
                      "indexExpression": {
                        "id": 442,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "665:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "649:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "675:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "649:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "649:30:1"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 448,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "689:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 451,
                        "indexExpression": {
                          "id": 449,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "689:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 452,
                      "indexExpression": {
                        "id": 450,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "705:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "689:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 453,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "715:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "689:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "689:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 457,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "748:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 458,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "756:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 459,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "764:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 456,
                      "name": "PairDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "735:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "EmitStatement",
                  "src": "730:39:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "294:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "313:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "305:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "329:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "321:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:32:1"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "379:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "371:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:14:1"
            },
            "scope": 464,
            "src": "285:491:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 465,
        "src": "76:702:1",
        "usedErrors": []
      }
    ],
    "src": "0:779:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "ERC20": [
        394
      ],
      "Factory": [
        464
      ],
      "Math": [
        1680
      ],
      "Pair": [
        990
      ],
      "SafeMath": [
        1755
      ],
      "UQ112x112": [
        1799
      ]
    },
    "id": 465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:1"
      },
      {
        "id": 397,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:25:1"
      },
      {
        "absolutePath": "project:/contracts/Pair.sol",
        "file": "./Pair.sol",
        "id": 398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 465,
        "sourceUnit": 991,
        "src": "54:20:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Factory",
        "contractDependencies": [
          990
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 464,
        "linearizedBaseContracts": [
          464
        ],
        "name": "Factory",
        "nameLocation": "85:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 404,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "154:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 464,
            "src": "99:62:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 403,
              "keyType": {
                "id": 399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "107:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "99:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 402,
                "keyType": {
                  "id": 400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "126:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "118:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 401,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "137:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 412,
            "name": "PairDeployed",
            "nameLocation": "174:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "212:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "196:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "196:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 408,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "244:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "228:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "268:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "260:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:92:1"
            },
            "src": "168:111:1"
          },
          {
            "body": {
              "id": 462,
              "nodeType": "Block",
              "src": "389:387:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 422,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "431:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 423,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "441:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "431:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e732063616e6e6f74206265207468652073616d652e",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "449:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
                          "typeString": "literal_string \"Tokens cannot be the same.\""
                        },
                        "value": "Tokens cannot be the same."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddeab0d8aaab8e6dde28cbd154ac1ea77281b2469442f0623000b7c49905f4f4",
                          "typeString": "literal_string \"Tokens cannot be the same.\""
                        }
                      ],
                      "id": 421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "423:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "423:55:1"
                },
                {
                  "expression": {
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 428,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "563:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 434,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "587:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 435,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "595:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "578:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Pair_$990_$",
                              "typeString": "function (address,address) returns (contract Pair)"
                            },
                            "typeName": {
                              "id": 432,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 431,
                                "name": "Pair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 990,
                                "src": "582:4:1"
                              },
                              "referencedDeclaration": 990,
                              "src": "582:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Pair_$990",
                                "typeString": "contract Pair"
                              }
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pair_$990",
                            "typeString": "contract Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Pair_$990",
                            "typeString": "contract Pair"
                          }
                        ],
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "570:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "570:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "563:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "563:40:1"
                },
                {
                  "expression": {
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 440,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "649:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 443,
                        "indexExpression": {
                          "id": 441,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "657:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "649:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 444,
                      "indexExpression": {
                        "id": 442,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "665:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "649:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 445,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "675:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "649:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 447,
                  "nodeType": "ExpressionStatement",
                  "src": "649:30:1"
                },
                {
                  "expression": {
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 448,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "689:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 451,
                        "indexExpression": {
                          "id": 449,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "697:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "689:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 452,
                      "indexExpression": {
                        "id": 450,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "705:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "689:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 453,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "715:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "689:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "689:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 457,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "748:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 458,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "756:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 459,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "764:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 456,
                      "name": "PairDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "735:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "EmitStatement",
                  "src": "730:39:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "294:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "313:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "305:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "329:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "321:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:32:1"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "379:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 463,
                  "src": "371:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:14:1"
            },
            "scope": 464,
            "src": "285:491:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 465,
        "src": "76:702:1",
        "usedErrors": []
      }
    ],
    "src": "0:779:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x48082E076A5514631960950a00F6C69d861cc704",
      "transactionHash": "0xb20ee11b4d86eeb1e4217276405d07d7a1949bb132cdf75c1e9588e04ec671e5"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-05T21:09:26.901Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}